task tagRelease << {
    version = System.env.RELEASE_VERSION ?: "test"

    if (version == null) {
        throw new java.lang.IllegalArgumentException("RELEASE_VERSION must be defined")
    }
    if (System.env.SCM_USERNAME == null) {
        throw new java.lang.IllegalArgumentException("SCM_USERNAME must be defined")
    }
    if (System.env.SCM_PASSWORD == null) {
        throw new java.lang.IllegalArgumentException("SCM_PASSWORD must be defined")
    }
    exec {
        executable 'git'
        args 'tag', version
    }
    exec{
        executable 'git'
        args 'push', "https://$System.env.SCM_USERNAME:$System.env.SCM_PASSWORD@$System.env.REPO_URL", "refs/tags/$version"
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'findbugs'

    group = 'fi.vincit'
    sourceCompatibility = 1.7
    version = System.env.RELEASE_VERSION ?: '1.0.0-SNAPSHOT'

    repositories {
        mavenCentral()
    }

    jar {
        manifest {
            attributes 'Implementation-Title': archivesBaseName,
                    'Implementation-Version': version
        }
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: "$System.env.REPOSITORY_URL") {
                    authentication(
                            userName: "$System.env.DEPLOY_USERNAME",
                            password: "$System.env.DEPLOY_PASSWORD"
                    )
                }
                addFilter('core') {artifact, file ->
                    artifact.name == 'multi-user-test-runner'
                }
                addFilter('spring-test-class-runner') {artifact, file ->
                    artifact.name == 'multi-user-test-runner-spring'
                }
            }
        }
    }

    tasks.withType(FindBugs) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

}


project(':core') {
    apply plugin: 'maven-publish'

    archivesBaseName = 'multi-user-test-runner'

    javadoc {
        failOnError = false
    }

    dependencies {
        compile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
        compile group: 'junit', name: 'junit', version: '4.12'
        testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
    }
}

project(':integration-test') {
    dependencies {
        compile project(':core')
    }
}

project(':spring-test-class-runner') {
    archivesBaseName = 'multi-user-test-runner-spring'

    dependencies {
        println("Using Spring Core version $System.env.SPRING_VERSION")
        println("Using Spring Security version $System.env.SPRING_SECURITY_VERSION")

        compile project(':core')
        compile group: 'org.springframework', name: 'spring-test', version: System.env.SPRING_VERSION ?: '3.2.11.RELEASE'
        compile group: 'org.springframework.security', name: 'spring-security-core', version: System.env.SPRING_SECURITY_VERSION ?: '3.2.5.RELEASE'
    }
}

project(':java-8-test') {
    dependencies {
        compile project(':core')
        compile project(':integration-test')
    }
    sourceCompatibility = 1.8
}

project(':spring-test') {

    dependencies {
        compile project(':core')
        compile project(':integration-test')

        compile group: 'org.springframework.security', name: 'spring-security-core', version: '3.2.5.RELEASE'
        compile group: 'org.springframework', name: 'spring-test', version: '3.2.11.RELEASE'
        compile project(':spring-test-class-runner')

    }
}